swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Workflow Application REST API'
  description: 'Service application to trace the requests received from channel to conductor'

################################################################################
#
# Host, Base Path, Schemes and Content Types
#
################################################################################
host: localhost
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /wf-applications/v1
produces:
  - application/json

################################################################################
#                                   Parameters[path]                           #
################################################################################
parameters:
  id_case-request:
    name: id_case-request
    in: path
    description: 'id_case-request'
    type: string
    required: true
  id_application:
      name: id_application
      in: path
      description: 'id_raw-data'
      type: string
      required: true
  id_raw-data:
    name: id_raw-data
    in: path
    description: 'id_raw-data'
    type: string
    required: true
  id_attachment:
    name: id_attachment
    in: path
    description: 'id_attachment'
    type: string
    required: true
  id_participant:
    name: id_participant
    in: path
    description: 'id_participant'
    required: true
    type: string

################################################################################
#
# Paths
#
################################################################################
paths:
  /case-request:
    post:
      operationId: createCaseRequest
      tags:
        - CaseRequest
      summary: 'Create Case Request'
      description: 'Creates a Case Request'
      consumes:
        - application/json
      parameters:
        - name: data
          in: body
          description: 'Create CaseRequest'
          required: true
          schema:
            $ref: '#/definitions/case-request'
      responses:
          200:
            description: Empty response when successful creation
            schema:
              $ref: '#/definitions/case-request'
          400:
            description: 'application error'
          404:
            description: 'data is not valid'
          500:
            description: 'business or technical error'

  /case-request/{id_case-request}:
    get:
      operationId: getCaseRequest
      tags:
        - GetCaseRequest
      summary: 'Retrieve Case Request by id'
      description: 'Returns the case request'
      parameters:
        - $ref: '#/parameters/id_case-request'
      responses:
          200:
            description: 'Retrieved Case Request based on the given id'
            schema:
              $ref: '#/definitions/case-request'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'

  /case-request/{id_case-request}/applications:
    post:
      operationId: createApplicationCaseRequest
      tags:
        - CreateApplicationCaseRequest
      summary: 'Create Application on Case Request'
      description: 'Create Application on Case Request based on the given ID Case Request'
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/id_case-request'
        - name: data
          in: body
          description: 'Create Application of Case Request'
          required: true
          schema:
            $ref: '#/definitions/case-application'
      responses:
          200:
            description: Empty response when successful creation
            schema:
              $ref: '#/definitions/case-application'
          400:
            description: 'application error'
          404:
            description: 'application data is not updated'
          500:
            description: 'business or technical error'

  /case-request/{id_case-request}/applications/{id_application}:
    get:
      operationId: getApllicationCaseRequest
      tags:
        - GetApllicationCaseRequest
      summary: 'Retrieve Case Request by id'
      description: 'Returns the case request'
      parameters:
        - $ref: '#/parameters/id_case-request'
        - $ref: '#/parameters/id_application'
      responses:
          200:
            description: 'Retrieved Case Request based on the given id'
            schema:
              $ref: '#/definitions/case-application'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'

#  /case-request/applications/{id_application}:
#    put:
#      operationId: getCustomerBasicData
#      tags:
#        - CustomerBasicData
#      summary: 'Retrieve Customer Basic Data'
#      description: 'Returns Customer Basic Data; Calls P011'
#      parameters:
#        - $ref: '#/parameters/customerEntity'
#        - $ref: '#/parameters/customerNumber'
#      responses:
#          200:
#            description: 'Retrieved Customer Basic Data based on the given request'
#            schema:
#              $ref: '#/definitions/GetCustomerBasicDataResponse'
#          400:
#            description: 'Application error - Verify the BAWAG specific headers for detailed information'
#          404:
#            description: 'Basic Data not found'
#          500:
#            description: 'Business or technical error - See x-bawagpsk-errors header for detailed information'
#
  /case-request/{id_case-request}/raw-data/{id_raw-data}:
    get:
      operationId: getRawDataCaseRequest
      tags:
        - GetRawDataCaseRequest
      summary: 'Retrieve Customer Additional Data'
      parameters:
        - $ref: '#/parameters/id_case-request'
        - $ref: '#/parameters/id_raw-data'
      responses:
          200:
            description: 'Retrieved Raw Data'
            schema:
              $ref: '#/definitions/case-raw-data'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'

  /case-request/{id_case-request}/raw-data:
    post:
      operationId: createRawDataCaseRequest
      tags:
        - CreateRawDataCaseRequest
      summary: 'create Raw Data Case Request'
      description: 'create Raw Data Case Request'
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/id_case-request'
        - name: data
          in: body
          description: 'Create Raw Data Case Request'
          required: true
          schema:
            $ref: '#/definitions/case-raw-data'
      responses:
          200:
            description: Empty response when successful creation
            schema:
              $ref: '#/definitions/case-raw-data'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'


  /case-request/{id_case-request}/attachments/{id_attachment}:
    get:
      operationId: getAttachmentsCaseRequest
      tags:
        - GetAttachmentsCaseRequest
      summary: 'Get Attachments Case Request'
      description: 'Get Attachments Case Request'
      parameters:
        - $ref: '#/parameters/id_case-request'
        - $ref: '#/parameters/id_attachment'
      responses:
          200:
            description: ''
            schema:
              $ref: '#/definitions/case-raw-attachments'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'

  /case-request/{id_case-request}/attachments:
    post:
      operationId: createAttachmentsCaseRequest
      tags:
        - createAttachmentsCaseRequest
      summary: 'Create Customer Basic Data for legal entity'
      description: 'Creates a Customer Basic Data; Calls P011'
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/id_case-request'
        - name: data
          in: body
          description: 'Create Attachments Case Request'
          required: true
          schema:
            $ref: '#/definitions/case-raw-attachments'
      responses:
          200:
            description: Empty response when successful creation
            schema:
              $ref: '#/definitions/case-raw-attachments'
          400:
            description: 'application error'
          404:
            description: 'basic data not found'
          500:
            description: 'business or technical error'

  /caserequest/{id_case-request}/participants/{id_participant}:
    get:
      operationId: getParticipantsCaseRequest
      tags:
        - GetParticipantsCaseRequest
      summary: 'Get Participants Case Request'
      description: 'Get Participants Case Request'
      parameters:
        - $ref: '#/parameters/id_case-request'
        - $ref: '#/parameters/id_participant'
      responses:
        200:
          description: 'Retrieved participants data based on the given identification'
          schema:
            $ref: '#/definitions/case-participant'
        400:
          description: 'application error'
        404:
          description: 'basic data not found'
        500:
          description: 'business or technical error'

  /case-request/{id_case-request}/participants:
      post:
        operationId: createParticipantsCaseRequest
        tags:
          - createParticipantsCaseRequest
        summary: 'Create Customer Basic Data for legal entity'
        description: 'Creates a Customer Basic Data; Calls P011'
        consumes:
          - application/json
        parameters:
          - $ref: '#/parameters/id_case-request'
          - name: data
            in: body
            description: 'Create Participants Case Request'
            required: true
            schema:
              $ref: '#/definitions/case-participant'
        responses:
            200:
              description: Empty response when successful creation
              schema:
                $ref: '#/definitions/case-participant'
            400:
              description: 'application error'
            404:
              description: 'basic data not found'
            500:
              description: 'business or technical error'

#  /admin-task/entity/{id_entity}:
#    get:
#      operationId: 'getCustomerContactData'
#      tags:
#        - CustomerContactData
#      summary: 'Get Customer Contact Data List'
#      description: 'Reads list of customer contact-data.'
#      parameters:
#        - $ref: '#/parameters/customerEntity'
#        - $ref: '#/parameters/customerNumber'
#        - name: contactNumber
#          in: query
#          required: false
#          type: integer
#          format: int32
#        - name: isActiveOnly
#          in: query
#          required: false
#          type: boolean
#        - name: isLatestOnly
#          in: query
#          required: false
#          type: boolean
#        - name: includeHidden
#          in: query
#          required: false
#          type: boolean
#      responses:
#        200:
#          description: 'Get Customer Contact Data Response (might be empty)'
#          schema:
#            $ref: '#/definitions/GetCustomerContactDataResponse'
#        400:
#          description: 'Application error - Verify the BAWAG specific headers for detailed information'
#        404:
#          description: 'Account not found'
#        500:
#          description: 'Business or technical error - See x-bawagpsk-errors header for detailed information'
#
#  /admin-task/activity:
#    get:
#      operationId: 'getCustomerEconomicEnvironment'
#      tags:
#        - CustomerEconomicEnvironment
#      summary: 'Get Person Economic Environment'
#      description: 'Retrieves the data related to Economic Environment.'
#      parameters:
#        - $ref: '#/parameters/customerEntity'
#        - $ref: '#/parameters/customerNumber'
#        - $ref: '#/parameters/iban'
#        - $ref: '#/parameters/yyWorkflowProcess'
#      responses:
#        200:
#          description: 'Get Person Economic Environment Response (might be empty)'
#          schema:
#            $ref: '#/definitions/GetCustomerEconomicEnvironmentResponse'
#        400:
#          description: 'Application error - Verify the BAWAG specific headers for detailed information'
#        404:
#          description: 'Account not found'
#        500:
#          description: 'Business or technical error - See x-bawagpsk-errors header for detailed information'
#
#  /admin-task/status:
#    get:
#      operationId: getCustomerPromotionCodes
#      tags:
#        - CustomerPromotionCodes
#      summary: 'Retrieve Customer Promotions'
#      description: 'Faciliates Customer Promotions Retrieval; Calls P127'
#      parameters:
#        - $ref: '#/parameters/customerEntity'
#        - $ref: '#/parameters/promotionCode'
#      responses:
#          200:
#            description: 'Retrieves list of found promotions for the given code, or empty if none found'
#            schema:
#              $ref: '#/definitions/GetCustomerPromotionCodesResponse'
#          400:
#            description: 'Application error - Verify the BAWAG specific headers for detailed information'
#          404:
#            description: 'Customer Promotion Data not found'
#          500:
#            description: 'Business or technical error - See x-bawagpsk-errors header for detailed information'

definitions:

  entity:
    type: object
    properties:
      id:
        type: string
        description: 'id of the entity'
        example: '0100'
      description:
        type: string
        description: 'Entity'
        example: '0100'

  case-request:
    type: object
    properties:
      id:
        type: string
        description: 'ID of Case Request'
        example: '0100'
      entity:
        $ref: '#/definitions/entity'
      case-application:
        $ref: '#/definitions/case-application'
      case-raw-data:
        $ref: '#/definitions/case-application'
      case-raw-attachments:
        $ref: '#/definitions/case-raw-attachments'
      creation-date:
        type: string #change to date-time after
        description: 'Creation date of the case request'
        example: '2017-07-21T17:32:28Z'
      creation-user:
        type: string
        description: 'Creation user of the case request'
        example: 'Al'
      modification-date:
        type: string #change to date-time after
        description: 'Modification date of the case request'
        example: '2017-07-21T17:32:28Z'
      modification-user:
        type: string
        description: 'Modification date of the case request'
        example: 'Ed'
#      required:
#            - case-raw-data
#            - case-participants-data
#            - case-application

  case-raw-data:
    type: object
    properties:
      id:
        type: integer
        description: 'id of case raw-data'
        example: '0100'
      raw:
        type: object
        description: 'object JSON'
        example: '{"name":"John"}'

  case-raw-attachments:
    type: object
    properties:
      id:
        type: integer
        description: 'id of case raw-attachment'
        example: '1231'
      seq-id:
        type: string
        description: 'seq id of case raw-attachment'
        example: '1'
      data:
        type: string
        description: ''
        example: ''
      metadata:
        type: object
        description: 'object JSON'
        example: '{"timestamp_creation_user": "2017-07-21T17:32:28Z"}'

  case-participant:
    type: object
    properties:
      id:
        type: integer
        description: 'id of case participant'
        example: '0100'
      participants-data:
        type: object
        description: 'jsonB'
        example: '{"participants": ["John","Al","Ed"]}'

  case-application:
    type: object
    properties:
      id:
        type: integer
        description: 'id of case application'
        example: '0100'
      app-seq:
        type: object
        description: ''
        example: ''
      business-process:
        type: string
        description: ''
        example: ''
      status:
        $ref: '#/definitions/status'
      creation-date:
        type: string #change to date-time after
        description: 'Creation date of the case request'
        example: '2017-07-21T17:32:28Z'
      creation-user:
        type: string
        description: 'Creation user of the case request'
        example: 'Ferris'
      modification-date:
        type: string #change to date-time after
        description: 'Modification date of the case request'
        example: '2017-07-21T17:32:28Z'
      modification-user:
        type: string
        description: 'Modification date of the case request'
        example: 'Tom'

  status:
    type: object
    properties:
      id:
        type: string
        description: 'id of status'
        example: '0100'
      description:
        type: integer
        description: 'status'
        example: '0100'

  activity:
    type: object
    properties:
      id:
        type: string
        description: 'id of activity'
        example: '0100'
      description:
        type: integer
        description: 'activity'
        example: '0100'

  activity-status-restriction:
      type: object
      properties:
        id-activity-status:
          type: string
          description: 'id of activity-status'
          example: '0100'
        id-status:
          $ref: '#/definitions/status'
        id-activity:
          $ref: '#/definitions/activity'


